name: YouTube Analytics Refresh

on:
  workflow_dispatch: {}
  schedule:
    # - cron: "5 7 * * *"   # ~12:05 AM PT during DST (UTC-7)
    - cron: "5 8 * * *"     # ~12:05 AM PT during Standard Time (UTC-8)

permissions:
  contents: write

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history so we can pull/rebase)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Ensure repo root is on PYTHONPATH
        run: echo "PYTHONPATH=.:$PYTHONPATH" >> $GITHUB_ENV

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install google-api-python-client google-auth google-auth-oauthlib google-auth-httplib2 pandas

      # Build token.json from your two secrets (no code changes needed)
      - name: Create authorized-user token.json from secrets
        env:
          YT_CLIENT_SECRET_JSON: ${{ secrets.YT_CLIENT_SECRET_JSON }}  # full client JSON
          YT_TOKEN_JSON: ${{ secrets.YT_TOKEN_JSON }}                  # refresh token string
        run: |
          python - <<'PY'
import os, json, sys
try:
    cfg_raw = os.environ["YT_CLIENT_SECRET_JSON"]
    refresh = os.environ["YT_TOKEN_JSON"]
    cfg = json.loads(cfg_raw)
    block = cfg.get("installed") or cfg.get("web") or {}
    client_id = block["client_id"]
    client_secret = block["client_secret"]
    data = {
        "token": None,
        "refresh_token": refresh,
        "token_uri": "https://oauth2.googleapis.com/token",
        "client_id": client_id,
        "client_secret": client_secret,
        "scopes": [
            "https://www.googleapis.com/auth/yt-analytics.readonly",
            "https://www.googleapis.com/auth/youtube.readonly"
        ],
        "expiry": None
    }
    with open("token.json","w") as f:
        f.write(json.dumps(data))
    print("token.json ✅ written")
except Exception as e:
    print("❌ Failed to build token.json:", e)
    sys.exit(1)
PY

      - name: Run reports (30 full days in PT with 2-day lag)
        env:
          TZ: America/Los_Angeles
        run: |
          END="$(date -d '2 days ago' +%F)"        # PT today - 2
          START="$(date -d '32 days ago' +%F)"     # last ~30 FULL days
          echo "Range: $START -> $END (America/Los_Angeles)"
          python yta_run_reports.py --start "$START" --end "$END"

      - name: Commit and push outputs (pull-rebase first)
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add yta_outputs/*.csv 2>/dev/null || true
          git add *.csv 2>/dev/null || true

          if ! git diff --cached --quiet; then
            git commit -m "Automated YTA refresh: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          else
            echo "No changes to commit."
          fi

          git config pull.rebase true
          git pull origin main || true

          if ! git push origin main; then
            echo "Push failed once; pulling/rebasing and retrying..."
            git pull --rebase origin main || true
            git push origin main
          fi


